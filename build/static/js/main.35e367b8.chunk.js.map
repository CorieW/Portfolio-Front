{"version":3,"sources":["components/Intro/Intro.js","components/Projects/Projects.js","components/Contact/Contact.js","components/Slideshow/Slideshow.js","components/Socials/Socials.js","App.js","reportWebVitals.js","index.js"],"names":["Intro","className","href","target","rel","Projects","Contact","name","action","method","enctype","for","id","type","placeholder","rows","Slideshow","pages","GetPageIndex","i","length","window","location","pathname","GetSlideFrom","console","log","document","referrer","split","ChangePage","direction","sliderBtn","pageNum","getElementsByClassName","classList","add","children","setTimeout","replace","previousSlideDirection","onClick","GetSlideshowButtons","Socials","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.35e367b8.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Intro.css'\r\n\r\nexport default function Intro() {\r\n    return (\r\n        <div className='intro'>\r\n            <p className='header'><span className='greeting'>Hello</span>, I'm <i>Corie Watson.</i></p>\r\n            <p className='sub-header'>I'm a Software Developer.</p>\r\n\r\n            <p className='info'>I taught myself basic HTML and CSS at the age of 13 years old, with a lot of trial and error and the assistance of online resources such \r\n                as <a href='https://www.codecademy.com/' target='_blank' rel='noreferrer'>Codecademy</a>. Being introduced to web development at such a young age allowed me to experiment with many areas of programming.\r\n                <br/><br/>\r\n                Game development I enjoy very much, as it allows me to express my creative side without any restraints on possibilities. I have worked on many game development projects \r\n                in the past, most being experiments for future projects that I plan on working on and projects that I am currently working on. One particular area of game development that \r\n                interests me is procedural generation. I have put in a lot of time playing around with procedural generation, as it's definitely one of the things I'll include in most of \r\n                my projects. The idea of not having to define what will be around the next corner in a video game is incredible to me.\r\n                <br/><br/>\r\n                Recently I have been focusing a lot of my time on web development. After learning HTML and CSS when I was 13, I took it very slow and eventually decided \r\n                to base much of my time around game development. However, within the past six months I have done a lot of experimenting with a bunch of web technologies. I have come to \r\n                enjoy using the MERN (MongoDB, Express, React, and Node.js) stack. I have also planned a few projects, small and large that I want to work on, some I am working on.\r\n                <br/><br/>\r\n                <i>Some of my own projects can be found on the next page...</i>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Projects.css'\r\n\r\nexport default function Projects() {\r\n    return (\r\n        <div className='projects'>\r\n            <p className='header'>Projects</p>\r\n            <div className='project-list-container'>\r\n                <div className='project'>\r\n                    <p className='project-name'>Tilt It</p>\r\n                    <p className='short-description'>A unique Android game, published on the Google Play Store. To win tilt the balls into their correct goals.</p>\r\n                    <div className='links'>\r\n                        <a className='link fab fa-google-play' href='https://play.google.com/store/apps/details?id=com.CoreStep.TiltIt' target='_blank' rel='noreferrer'>\r\n                            <span className='screen-reader-text'>Project on Google Play Store</span>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n                <div className='project'>\r\n                    <p className='project-name'>2D World Generator</p>\r\n                    <p className='short-description'>A software that generates 2D worlds using Perlin Noise. Includes: biomes, chunk generation, world map generation, biome features (trees, rocks, grass...), etc...</p>\r\n                    <div className='links'>\r\n                        <a className='link fab fa-github' href='https://github.com/CorieW/WorldGenerator' target='_blank' rel='noreferrer'>\r\n                            <span className='screen-reader-text'>Project's GitHub repository</span>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n                <div className='project'>\r\n                    <p className='project-name'>Multiplayer RTS Game</p>\r\n                    <p className='short-description'>A multiplayer RTS game that is currently being worked on. I'm working with the Unity game engine and the Mirror networking library.</p>\r\n                    <div className='links'>\r\n                        <a className='link fab fa-github' href='https://github.com/CorieW/Multiplayer-RTS-Game' target='_blank' rel='noreferrer'>\r\n                            <span className='screen-reader-text'>Project's GitHub repository</span>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n                <div className='project'>\r\n                    <p className='project-name'>IMustAsk.com</p>\r\n                    <p className='short-description'>A small website development project using the MERN stack. Ask and answer questions faster and easier than ever!</p>\r\n                    <div className='links'>\r\n                        <a className='link fab fa-github' href='https://github.com/CorieW/IMustAsk.com' target='_blank' rel='noreferrer'>\r\n                            <span className='screen-reader-text'>Project's GitHub repository</span>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n                <div className='project'>\r\n                    <p className='project-name'>Portfolio</p>\r\n                    <p className='short-description'>This website that you are on right now was developed by myself.</p>\r\n                    <div className='links'>\r\n                        <a className='link fab fa-github' href='https://github.com/CorieW/Portfolio' target='_blank' rel='noreferrer'>\r\n                            <span className='screen-reader-text'>Project's GitHub repository</span>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Contact.css'\r\n\r\nexport default function Contact() {\r\n    return (\r\n        <div className='contact'>\r\n            <p className='header'>Contact Me</p>\r\n            <p className='info'>Got some cool project you want to work on together? Get in touch with me!<br/>\r\n                                Use the contact form below or contact me directly through <i>Watson.Corie@Gmail.com</i>.</p>\r\n            <form className='contact-me-form' name='contact' action=\"mailto:watson.corie@Gmail.com\" method=\"post\" enctype=\"text/plain\">\r\n                <label className='info' for='email-address'>Email Address</label>\r\n                <input id='email-address' name='email-address' type='text' placeholder='Enter email address' />\r\n                \r\n                <br/>\r\n\r\n                <label className='info' for='subject'>Subject</label>\r\n                <input id='subject' name='subject' type='text' placeholder='Enter subject' />\r\n                \r\n                <br/>\r\n\r\n                <label className='info' for='subject'>Message</label>\r\n                <textarea id='message' name='message' placeholder='Enter message' rows='4'></textarea>\r\n\r\n                <button id='submit'>Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import './Slideshow.css'\r\n\r\nexport default function Slideshow()\r\n{\r\n    const pages = ['/', '/projects', '/contact']\r\n\r\n    function GetPageIndex() {\r\n        for (let i = 0; i < pages.length; i++)\r\n        {\r\n            if (pages[i] === window.location.pathname)\r\n                return i;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    function GetSlideFrom() { // Returns the slide direction from which the user came from.\r\n      // Returns -1 if user came from the previous slide.\r\n      // Returns 0 if user came from an undefined page.\r\n      // Returns 1 if the user came from the next slide.\r\n      // etc...\r\n        for (let i = 0; i < pages.length; i++) {\r\n            console.log(document.referrer.split('/')[3])\r\n            if (pages[i] === '/' + document.referrer.split('/')[3]) {\r\n                return i - GetPageIndex();\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    function ChangePage(direction)\r\n    {\r\n        let pageNum = GetPageIndex()\r\n        let sliderBtn\r\n\r\n        if (direction < 0) {\r\n            sliderBtn = document.getElementsByClassName('slide-left')[0]\r\n        } else if (direction > 0) {\r\n            sliderBtn = document.getElementsByClassName('slide-right')[0]\r\n        }\r\n        \r\n        sliderBtn.classList.add('page-exit')\r\n        sliderBtn.children[0].classList.add('page-slider-arrow-exit')\r\n\r\n        setTimeout(() => {\r\n            window.location.replace('http://localhost:3000' + pages[pageNum + direction])\r\n        }, 500)\r\n    }\r\n\r\n    function GetSlideshowButtons() {\r\n        let pageNum = GetPageIndex()\r\n        let previousSlideDirection = GetSlideFrom()\r\n        console.log(GetSlideFrom())\r\n\r\n        if (pageNum > 0 && pageNum < pages.length - 1)\r\n            return (\r\n                <div className='slideshow-btns'>\r\n                    <button className={'slide-left ' + (previousSlideDirection < 0 ? 'page-entrance' : 'first-page-entrance')} onClick={() => ChangePage(-1)}>\r\n                        <i className='page-slider-arrow-entrance fas fa-arrow-left'></i>\r\n                    </button>\r\n                    <button className={'slide-right ' + (previousSlideDirection > 0 ? 'page-entrance' : 'first-page-entrance')} onClick={() => ChangePage(1)}>\r\n                        <i className='page-slider-arrow-entrance fas fa-arrow-right'></i>\r\n                    </button>\r\n                </div>\r\n            )\r\n        else if (pageNum === 0 && pages.length - 1 > 0)\r\n            return (\r\n                <div className='slideshow-btns'>\r\n                    <button className={'slide-right ' + (previousSlideDirection > 0 ? 'page-entrance' : 'first-page-entrance')} onClick={() => ChangePage(1)}>\r\n                        <i className='page-slider-arrow-entrance fas fa-arrow-right'></i>\r\n                    </button>\r\n                </div>\r\n            )\r\n        else if (pageNum === pages.length - 1 && pages.length - 1 !== 0)\r\n            return (\r\n                <div className='slideshow-btns'>\r\n                    <button className={'slide-left ' + (previousSlideDirection < 0 ? 'page-entrance' : 'first-page-entrance')} onClick={() => ChangePage(-1)}>\r\n                        <i className='page-slider-arrow-entrance fas fa-arrow-left'></i>\r\n                    </button>\r\n                </div>\r\n            )\r\n    }\r\n\r\n    return (\r\n        <div className='slideshow'>\r\n            { GetSlideshowButtons() }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Socials.css'\r\n\r\nexport default function Socials() {\r\n    return (\r\n        <div className='socials'>\r\n            <div className='socials-container'>\r\n                <ul>\r\n                    <li>\r\n                        <a className='social fab fa-github' href='https://github.com/CorieW' target='_blank' rel='noreferrer'>\r\n                            <span className='screen-reader-text'>My GitHub profile</span>\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a className='social fab fa-twitter' href='https://twitter.com/C_0_R_E_' target='_blank' rel='noreferrer'>\r\n                            <span className='screen-reader-text'>My Twitter profile</span>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css'\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Intro from './components/Intro/Intro'\r\nimport Projects from './components/Projects/Projects'\r\nimport Contact from './components/Contact/Contact'\r\nimport Slideshow from './components/Slideshow/Slideshow'\r\nimport Socials from './components/Socials/Socials'\r\n\r\nexport default function App()\r\n{\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/projects\">\r\n            <Projects />\r\n          </Route>\r\n          <Route exact path=\"/projects\">\r\n            <Projects />\r\n          </Route>\r\n          <Route exact path=\"/contact\">\r\n            <Contact />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Intro />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n\r\n      <Socials />\r\n      <Slideshow />\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}